#! /bin/sh

set -e

version_message="\
Git Named Stash v1.1.0

Copyright © 2022 Henrik Franciscus Leppä

This is free software. You may redistribute copies of it under the terms of the
MIT License <https://opensource.org/licenses/MIT>. There is NO WARRANTY, to the
extent permitted by law.
"
help_message="\
Allows using git stash command using the stash's name/message.

Usage: git-named-stash show <name-of-stash> [<git-stash-arguments>...]
   or: git-named-stash drop <name-of-stash> [<git-stash-arguments>...]
   or: git-named-stash pop <name-of-stash> [<git-stash-arguments>...]
   or: git-named-stash apply <name-of-stash> [<git-stash-arguments>...]
   or: git-named-stash push <name-of-stash> [<git-stash-arguments>...]
   or: git-named-stash (--help | -H | -h | -?)
   or: git-named-stash (--version | -V | -v)

Options:
  --help, -H, -h, -?
      Print this help message.
  --version, -V, -v
      Print version and copyright information.

Note: If there are multiple stashes with the same name/message, the one with the
lowest index is used.

Exit codes:
- 0 (\`EX_OK\`): Successful exit
- 64 (\`EX_USAGE\`): Incorrect arguments supplied
- 69 (\`EX_UNAVAILABLE\`): Stash was not found

[(See sysexits.h)](https://www.freebsd.org/cgi/man.cgi?query=sysexits&sektion=3)
"

ex_usage=64
ex_unavailable=69


if [ $# -ne 0 ]; then
  case $1 in
    (--version | -V | -v) printf '%s\n' "$version_message" ; exit ;;
    (--help | -H | -h | -\?) printf '%s\n' "$help_message" ; exit ;;
    (show | drop | pop | apply | push) command="$1"; shift ;;
    (*)
      printf '%s\n\n' "Invalid argument: \`$1\`" >& 2
      printf '%s\n\n' "Use \`--help\` option to see all valid arguments." >& 2
      exit $ex_usage
    ;;
  esac
else
  printf '%s\n\n' "Command needs at least one argument!" >& 2
  printf '%s\n\n' "Use \`--help\` option to see all valid arguments." >& 2
  exit $ex_usage
fi

if [ $# -lt 1 ]; then
  printf '%s\n\n' "Sub-command needs at least one argument!" >& 2
  printf '%s\n\n' "Number of sub-command arguments was: $#." >& 2
  printf '%s\n\n' "Use \`--help\` option to see all valid arguments." >& 2
  exit $ex_usage
fi

my_stash_name="$1"
shift

if [ "$command" = push ]; then
  printf '%s\n' "> git stash push --message $my_stash_name $@"
  git stash push --message "$my_stash_name" "$@"
  exit
fi

stash_line="$(git stash list | grep '^[^:]*:[^:]*: '"$my_stash_name"'$' | head -n 1)"

if [ -z "$stash_line" ]; then
  printf '%s\n\n' "Could not find stash named: '$my_stash_name'!" >& 2
  printf '%s\n\n' "All stashes:" >& 2
  git stash list
  exit $ex_unavailable
fi

stash_code="$(printf '%s' "$stash_line" | sed 's/:.*//')"
stash_name="$(printf '%s' "$stash_line" | sed 's/[^:]*:[^:]*: //')"
printf '%s\n' "> git stash $command $@ $stash_code"
git stash "$command" "$@" "$stash_code"
